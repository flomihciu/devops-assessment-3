- name: Deploy Movie DB App
  hosts: web
  become: true

  vars:
    docker_image_backend: "{{ lookup('env', 'DOCKER_USERNAME') }}/backend:latest"
    docker_image_frontend: "{{ lookup('env', 'DOCKER_USERNAME') }}/frontend:latest"
    db_host: "{{ lookup('env', 'RDS_ENDPOINT') }}"
    db_user: "{{ lookup('env', 'DB_USERNAME') }}"
    db_pass: "{{ lookup('env', 'DB_PASSWORD') }}"
    db_name: "{{ lookup('env', 'DB_NAME') }}"

  tasks:
    - name: Install Docker
      apt:
        name: docker.io
        state: present
        update_cache: true

    - name: Pull backend image
      community.docker.docker_image:
        name: "{{ docker_image_backend }}"
        source: pull
      register: backend_image_pull

    - name: Pull frontend image
      community.docker.docker_image:
        name: "{{ docker_image_frontend }}"
        source: pull
      register: frontend_image_pull

    - name: Stop and remove existing backend container (if exists)
      community.docker.docker_container:
        name: backend
        state: absent
      when: backend_image_pull.changed

    - name: Stop and remove existing frontend container (if exists)
      community.docker.docker_container:
        name: frontend
        state: absent
      when: frontend_image_pull.changed

    - name: Run backend container with connection string
      community.docker.docker_container:
        name: backend
        image: "{{ docker_image_backend }}"
        state: started
        restart_policy: always
        recreate: true
        exposed_ports:
          - "5000"
        published_ports:
          - "5000:5000"
        env:
          CONNECTION_STRING: "postgresql://{{ db_user }}:{{ db_pass }}@{{ db_host }}:5432/{{ db_name }}"
      when: backend_image_pull.changed

    - name: Run frontend container
      community.docker.docker_container:
        name: frontend
        image: "{{ docker_image_frontend }}"
        state: started
        restart_policy: always
        recreate: true
        exposed_ports:
          - "80"
        published_ports:
          - "80:80"
      when: frontend_image_pull.changed
