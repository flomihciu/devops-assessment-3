name: Deploy App

on:
  workflow_run:
    workflows: ["Provision Infrastructure"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4.2.1

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible openssh-client

      - name: Build & Push Docker Images
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/backend:latest ./backend
          docker push ${{ secrets.DOCKER_USERNAME }}/backend:latest

          docker build -t ${{ secrets.DOCKER_USERNAME }}/frontend:latest ./frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/frontend:latest
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}

      - name: SSH Setup + Run Ansible Deploy
        run: |
          # Set up SSH
          mkdir -p ~/.ssh
          echo "${SSH_PRIVATE_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          eval "$(ssh-agent -s)"
          ssh-add ~/.ssh/id_rsa

          # Add known hosts
          ssh-keyscan -H ${{ secrets.BASTION_PUBLIC_IP }} >> ~/.ssh/known_hosts || true
          ssh-keyscan -H ${{ secrets.EC2_PRIVATE_IP }} >> ~/.ssh/known_hosts || true

          # Create Ansible inventory
          echo "[web]" > ansible/inventory.ini
          echo "app ansible_host=${{ secrets.EC2_PRIVATE_IP }} ansible_user=ubuntu ansible_ssh_common_args='-o ProxyJump=ubuntu@${{ secrets.BASTION_PUBLIC_IP }} -o IdentityFile=~/.ssh/id_rsa -o IdentitiesOnly=yes -o StrictHostKeyChecking=no'" >> ansible/inventory.ini

          # Install Ansible collections (includes community.docker)
          ansible-galaxy collection install -r ansible/requirements.yml

          # Run Ansible playbook
          ansible-playbook -vvvv -i ansible/inventory.ini ansible/playbook.yml
        env:
          SSH_PRIVATE_KEY: ${{ secrets.AWS_SSH_PRIVATE_KEY }}
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          RDS_ENDPOINT: ${{ secrets.RDS_ENDPOINT }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          ANSIBLE_HOST_KEY_CHECKING: false
#test